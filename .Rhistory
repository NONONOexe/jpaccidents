usethis::use_r("download-accident-data")
type <- match.arg(type)
cli::cli_alert("The year must be between 2019 and 2022.")
cli::cli_abort("The year must be between 2019 and 2022.")
cli::cli_alert_danger("The year must be between 2019 and 2022.")
test <- function() {
cli_alert_danger("The year must be between 2019 and 2022.")
}
test()
test <- function() {
cli::cli_alert_danger("The year must be between 2019 and 2022.")
}
test()
test <- function() {
cli::cli_alert_danger("The year must be between 2019 and 2022.")
print("TEST")
}
test()
path.expand("a", "b")
devtools::load_all()
download_accident_main_data()
devtools::load_all()
download_accident_main_data()
devtools::load_all()
download_accident_main_data()
devtools::load_all()
download_accident_main_data()
devtools::load_all()
download_accident_main_data()
devtools::load_all()
download_accident_main_data()
usethis::use_import_from("curl", "curl_download")
usethis::use_import_from("curl", "curl_download")
usethis::use_import_from("cli", "cli_alert_success")
usethis::use_import_from("cli", "cli_alert_danger")
devtools::load_all()
download_accident_main_data()
download_accident_main_data()
download_accident_main_data()
download_accident_main_data()
type <- "honhyo"
year <- 2022
download_dir = getwd()
if (year < 2019 || 2022 < year) {
cli_alert_danger("The year must be between 2019 and 2022.")
return(invisible(NULL))
}
ext <- ifelse(type == "code", "pdf", "csv")
page <- "https://www.npa.go.jp/publications/statistics/koutsuu/opendata"
url <- paste0("{page}/{year}/{type}_{year}.{ext}")
destfile <- file.path(download_dir, basename(url))
destfile
usethis::use_import_from("stringr", "str_glue")
url <- str_glue("{page}/{year}/{type}_{year}.{ext}")
destfile <- file.path(download_dir, basename(url))
downloaded_file_path <- curl_download(url, destfile)
cli_alert_success("Downloaded the file {.path {downloaded_file_path}}")
return(invisible(downloaded_file_path))
devtools::load_all()
download_accident_main_data()
devtools::load_all()
download_accident_main_data()
test <- function() {
cli::cli_progress_step("Test")
sleep(10)
}
test()
test <- function() {
cli::cli_progress_step("Test")
Sys.sleep(10)
}
test()
cli::cli_progress_step("Test")
Sys.sleep(3)
test <- function() {
cli::cli_progress_step("Test")
Sys.sleep(3)
}
test()
test <- function() {
cli::cli_progress_step("Test",
msg_done = "Tested")
Sys.sleep(3)
}
test()
cli::cli_status_clear()
test <- function() {
cli::cli_progress_step("Test",
msg_done = "Tested")
Sys.sleep(3)
}
test()
devtools::load_all()
download_accident_main_data()
usethis::use_import_from()
usethis::use_import_from("cli", "cli_progress_step")
usethis::use_testthat()
usethis::use_test("download-accident-data")
test_that("download accident data", {
expect_success(download_accident_main_data())
# download_accident_sub_data()
# download_accident_highway_data()
# download_accident_code_data()
})
devtools::test()
devtools::test()
download_accident_main_data()
download_accident_main_data()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
download_accident_code_data()
download_accident_code_data()
devtools::test()
devtools::test()
devtools::check()
usethis::use_ccby_license()
devtools::check()
